<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Task Manager</title>
</head>
<body>
    <div id="app">
        <div class="container">
            <h1>Task Manager</h1>
            <div>
                <input type="text" v-model="newTask" @keyup.enter="addTask" placeholder="Add a new task...">
            </div>
            <ul>
                <li v-for="(task, index) in tasks" :key="index" :class="{ 'completed': task.completed }">
                    <span @click="toggleComplete(index)">{{ task.title }}</span>
                    <button @click="removeTask(index)">Remove</button>
                </li>
            </ul>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
    <script src="app.js"></script>
</body>
</html>

body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    background-color: #f8f8f8;
}

.container {
    max-width: 600px;
    margin: 50px auto;
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h1 {
    color: #333;
}

input[type="text"] {
    width: 100%;
    padding: 10px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

ul {
    list-style-type: none;
    padding: 0;
}

li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #fff;
    border: 1px solid #ddd;
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 4px;
}

.completed {
    text-decoration: line-through;
    color: #888;
}

button {
    padding: 8px;
    cursor: pointer;
    background-color: #ff6161;
    color: #fff;
    border: none;
    border-radius: 4px;
}

new Vue({
    el: '#app',
    data: {
        newTask: '',
        tasks: []
    },
    methods: {
        addTask() {
            if (this.newTask.trim() !== '') {
                this.tasks.push({ title: this.newTask, completed: false });
                this.newTask = '';
            }
        },
        removeTask(index) {
            this.tasks.splice(index, 1);
        },
        toggleComplete(index) {
            this.tasks[index].completed = !this.tasks[index].completed;
        }
    }
});
